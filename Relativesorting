#include<unordered_map>
#include<algorithm>
vector<int> relativeSorting(vector<int> &arr, vector<int> &brr, int n, int m)
{
    unordered_map<int, int> freq;

    vector<int> ans;

    for (int i = 0; i < n; i++)
    {
        freq[arr[i]]++;
    }
    int i = 0;
    while (i < m)
    {
        int num = brr[i];
        while (freq[num] > 0)
        {
            ans.push_back(num);
            freq[num]--; // Decrement freq[num] after adding the number to the ans vector
        }
        i++;
    }
    vector<int>s;

    for(auto j: freq)
    {
        if(j.second!=0)
        {
            s.push_back(j.first);
        }
    }
    sort(s.begin(),s.end());

    for (int k = 0; k < s.size(); k++)
    {
        int count = freq[s[k]];
        while (count > 0)
        {
            ans.push_back(s[k]);
            count--;
        }
    }
    return ans;
}
